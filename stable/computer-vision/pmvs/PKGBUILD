# vim: set ts=2 sw=2 et:
# $Id:.
# NuxSFM Maintainer : Pierre-Yves Paranthoen <nuxsfm at you know what gmail dot com>

pkgname=pmvs2
pkgver=2.0
pkgrel=1.1
pkgdesc="Many multi-view stereo (MVS) algorithms do not scale well to a large number of input images (lack of computational and memory resources)"
arch=('x86_64')
url="http://www.di.ens.fr/cmvs/"
license=('GPL')
depends=('libjpeg-turbo' 'gsl' 'boost')
makedepends=('git' 'boost' 'lapack' 'cmake' 'gsl')
#conflicts=('')
#provides=('')
groups=('computer-vision' 'sfm')

# The git repo is detected by the 'git:' or 'git+' beginning. The branch
# '$pkgname' is then checked out upon cloning, expediating versioning:

source=("$pkgname"::'git+https://github.com/pmoulon/CMVS-PMVS.git')
        
# Because the sources are not static, skip Git checksum:
md5sums=('SKIP')

prepare() {
    cd "$srcdir/$pkgname"
    git submodule init
    git submodule update
}


#pkgver() {
#    cd "$srcdir/$pkgname"
#    # Use the tag of the last commit
#    git describe --long | sed -r 's/([^-]*-g)/r\1/;s/-/./g'
#}


build() {
    mycarch="x86_64"
    mychost="x86_64-unknown-linux-gnu"
    myflags="-march=x86-64"
         
    cd "$srcdir/$pkgname/program"
    mkdir build
    cd build
    cmake . ..
}

package() {
    cd "$srcdir/$pkgname/program/build"
    make
    install -dm755 "${pkgdir}"/usr/local/bin
    cp -a "$srcdir/$pkgname/program/build"/main/cmvs "${pkgdir}"/usr/local/bin
    cp -a "$srcdir/$pkgname/program/build"/main/genOption "${pkgdir}"/usr/local/bin
    cp -a "$srcdir/$pkgname/program/build"/main/pmvs2 "${pkgdir}"/usr/local/bin
    rm -fr $startdir/pmvs2
    
    # license
    install -Dm644 $srcdir/$pkgname/license/GPL.readme "$pkgdir/usr/share/licenses/$pkgname/GPL.readme"
    install -Dm644 $srcdir/$pkgname/license/libgfx-license.html "$pkgdir/usr/share/licenses/$pkgname/libgfx-license.html"
    install -Dm644 $srcdir/$pkgname/Readme.txt "$pkgdir/usr/share/licenses/$pkgname/Readme.txt"
    install -Dm644 $srcdir/$pkgname/README "$pkgdir/usr/share/licenses/$pkgname/README"
    
    # clean sources
    rm -fr $srcdir
}
